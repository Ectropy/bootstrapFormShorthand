start = element*

//This grammar consists of any number of elements.
elements = element*

//Each element has a name, then a number of arguments.
element =  	_* e:(open spanarg*) _+ close {return e} /
			_* e:(name argument*) {return e}

//Accept any valid name for this element
name "element name"= first:[a-zA-Z_$] rest:[a-zA-Z0-9_$\-]* { return first + rest.join("") }

//Define what an argument looks like
argument "argument" = bar p:parameter {return p}

//define what a spanarg looks like (at least one param, maybe many)
spanarg "span argument" = _+ p:(parameter argument+) {return p}

//Accept any valid parameter
parameter "parameter" = p:[a-zA-Z0-9. ]* {return p.join("")}

bar "bar" = [|]
_ "new line" = [\n\r]

open "open" = name:[a-zA-Z]* "<" {return name.join("")}
close "close" = ">"
